// 存在这递推关系，使用动态规划的方式
class Solution {
    public int fib(int n) {
        if(n<2){
            return n;
        }
        int p = 0;
        int q = 0;
        int r = 1;
        for(int i = 2;i<=n;++i){
            p = q;   // 通过交换的方式使所得的结果一次一次往后进行更替
            q = r;
            r = q+p;
        }
        return r;
    }
}

// 下列方法为采用数学方法求出斐波那契数列的通项公式，与动态规划无关，不再赘述
class Solution {
    public int fib(int n) {
        double sqrt5 = Math.sqrt(5);
        double fibN = Math.pow((1 + sqrt5) / 2, n) - Math.pow((1 - sqrt5) / 2, n);
        return (int) Math.round(fibN / sqrt5);
    }
}
