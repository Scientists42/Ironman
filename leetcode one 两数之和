// 暴力方法  C++
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        int n = nums.size();
        for(int i = 0 ; i< n ; i++){
            for(int j = i+1; j<n;j++){
                if(nums[i]+nums[j] == target){
                    return {i,j};
                }
            }
        }
        return {};
    }
};


// 散列表解法   Java
class Solution {
    public int[] twoSum(int[] nums, int target) {
        Map<Integer, Integer> hashtable = new HashMap<Integer, Integer>();   //创建一个哈希表
        for(int i = 0;i<nums.length;i++){       
            if(hashtable.containsKey(target-nums[i])){          //使用containKeys()函数来查找
                return new int[]{hashtable.get(target-nums[i]),i};
            }
            hashtable.put(nums[i],i);
        } 
        return new int[0];
    }
}
